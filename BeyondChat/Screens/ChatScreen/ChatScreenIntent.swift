//
//  ChatScreenIntent.swift
//  BeyondChat
//
//  Created by Mac on 12.08.2020.
//  Copyright (c) 2020 Lammax. All rights reserved.
//
//  This file was generated by the MVI Xcode Templates so
//  you can apply MVI architecture to your iOS and Mac projects
//

import Foundation
import Combine

class ChatScreenIntent: ObservableObject {
    
    static let sharedInstance = ChatScreenIntent()
    
    @Published var chatLines: [ChatLine] = []
    
    private let speech = SpeechManager.sharedInstance
    private var settings: CommonSettings!
    
    private var linesToShow: [ChatLine] = []
    
    func setup(settings: CommonSettings) {
        self.settings = settings
        self.setupTextLines()
    }
    
    private func setupTextLines() {
        guard let chatData = settings.chatData else { fatalError("No chat data") }
        
        do {
            let decoder = JSONDecoder()
            let chat = try decoder.decode(Chat.self, from: chatData)
            self.linesToShow = chat.lines.reversed()
            self.showLineWithTimer(for: 1.0)
        } catch {
            print(error.localizedDescription)
        }
    }
    
    func say(this text: String) {
        speech.say(this: text)
    }
    
    private func showLineWithTimer(for delay: Double) {
        Timer.scheduledTimer(withTimeInterval: delay, repeats: true) { timer in
            
            if let line = self.linesToShow.popLast() {
                self.chatLines.append(line)
                Timer.scheduledTimer(withTimeInterval: 0.0, repeats: false) { timer in
                    self.speech.say(this: line.line)
                    timer.invalidate()
                }
            } else {
                timer.invalidate()
            }
            
            print( self.linesToShow.count)
        }
    }
    
}
